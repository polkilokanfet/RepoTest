namespace HVTApp.DataAccess
{
    public partial class UnitOfWork
    {
        public void InitializeRepositories()
        {
            CountryUnionRepository = new CountryUnionRepository(_context);
            BankGuaranteeRepository = new BankGuaranteeRepository(_context);
            BankGuaranteeTypeRepository = new BankGuaranteeTypeRepository(_context);
            ConstructorsParametersRepository = new ConstructorsParametersRepository(_context);
            ConstructorParametersListRepository = new ConstructorParametersListRepository(_context);
            CreateNewProductTaskRepository = new CreateNewProductTaskRepository(_context);
            DocumentNumberRepository = new DocumentNumberRepository(_context);
            FakeDataRepository = new FakeDataRepository(_context);
            IncomingRequestRepository = new IncomingRequestRepository(_context);
            LosingReasonRepository = new LosingReasonRepository(_context);
            MarketFieldRepository = new MarketFieldRepository(_context);
            PaymentActualRepository = new PaymentActualRepository(_context);
            PaymentConditionPointRepository = new PaymentConditionPointRepository(_context);
            PaymentPlannedRepository = new PaymentPlannedRepository(_context);
            PenaltyRepository = new PenaltyRepository(_context);
            PriceCalculationRepository = new PriceCalculationRepository(_context);
            PriceCalculationItemRepository = new PriceCalculationItemRepository(_context);
            ProductIncludedRepository = new ProductIncludedRepository(_context);
            ProductDesignationRepository = new ProductDesignationRepository(_context);
            ProductTypeRepository = new ProductTypeRepository(_context);
            ProductTypeDesignationRepository = new ProductTypeDesignationRepository(_context);
            ProjectTypeRepository = new ProjectTypeRepository(_context);
            StandartMarginalIncomeRepository = new StandartMarginalIncomeRepository(_context);
            StandartProductionTermRepository = new StandartProductionTermRepository(_context);
            StructureCostRepository = new StructureCostRepository(_context);
            GlobalPropertiesRepository = new GlobalPropertiesRepository(_context);
            AddressRepository = new AddressRepository(_context);
            CountryRepository = new CountryRepository(_context);
            DistrictRepository = new DistrictRepository(_context);
            LocalityRepository = new LocalityRepository(_context);
            LocalityTypeRepository = new LocalityTypeRepository(_context);
            RegionRepository = new RegionRepository(_context);
            SumRepository = new SumRepository(_context);
            CurrencyExchangeRateRepository = new CurrencyExchangeRateRepository(_context);
            NoteRepository = new NoteRepository(_context);
            OfferUnitRepository = new OfferUnitRepository(_context);
            PaymentConditionSetRepository = new PaymentConditionSetRepository(_context);
            ProductBlockRepository = new ProductBlockRepository(_context);
            ProductDependentRepository = new ProductDependentRepository(_context);
            BankDetailsRepository = new BankDetailsRepository(_context);
            CompanyRepository = new CompanyRepository(_context);
            CompanyFormRepository = new CompanyFormRepository(_context);
            DocumentsRegistrationDetailsRepository = new DocumentsRegistrationDetailsRepository(_context);
            EmployeesPositionRepository = new EmployeesPositionRepository(_context);
            FacilityTypeRepository = new FacilityTypeRepository(_context);
            ActivityFieldRepository = new ActivityFieldRepository(_context);
            ContractRepository = new ContractRepository(_context);
            MeasureRepository = new MeasureRepository(_context);
            ParameterRepository = new ParameterRepository(_context);
            ParameterGroupRepository = new ParameterGroupRepository(_context);
            ProductRelationRepository = new ProductRelationRepository(_context);
            PersonRepository = new PersonRepository(_context);
            ParameterRelationRepository = new ParameterRelationRepository(_context);
            SalesUnitRepository = new SalesUnitRepository(_context);
            DocumentRepository = new DocumentRepository(_context);
            SumOnDateRepository = new SumOnDateRepository(_context);
            ProductRepository = new ProductRepository(_context);
            OfferRepository = new OfferRepository(_context);
            EmployeeRepository = new EmployeeRepository(_context);
            OrderRepository = new OrderRepository(_context);
            PaymentConditionRepository = new PaymentConditionRepository(_context);
            PaymentDocumentRepository = new PaymentDocumentRepository(_context);
            FacilityRepository = new FacilityRepository(_context);
            ProjectRepository = new ProjectRepository(_context);
            UserRoleRepository = new UserRoleRepository(_context);
            SpecificationRepository = new SpecificationRepository(_context);
            TenderRepository = new TenderRepository(_context);
            TenderTypeRepository = new TenderTypeRepository(_context);
            UserRepository = new UserRepository(_context);
        }


        #region Repositories
        protected ICountryUnionRepository CountryUnionRepository;
        protected IBankGuaranteeRepository BankGuaranteeRepository;
        protected IBankGuaranteeTypeRepository BankGuaranteeTypeRepository;
        protected IConstructorsParametersRepository ConstructorsParametersRepository;
        protected IConstructorParametersListRepository ConstructorParametersListRepository;
        protected ICreateNewProductTaskRepository CreateNewProductTaskRepository;
        protected IDocumentNumberRepository DocumentNumberRepository;
        protected IFakeDataRepository FakeDataRepository;
        protected IIncomingRequestRepository IncomingRequestRepository;
        protected ILosingReasonRepository LosingReasonRepository;
        protected IMarketFieldRepository MarketFieldRepository;
        protected IPaymentActualRepository PaymentActualRepository;
        protected IPaymentConditionPointRepository PaymentConditionPointRepository;
        protected IPaymentPlannedRepository PaymentPlannedRepository;
        protected IPenaltyRepository PenaltyRepository;
        protected IPriceCalculationRepository PriceCalculationRepository;
        protected IPriceCalculationItemRepository PriceCalculationItemRepository;
        protected IProductIncludedRepository ProductIncludedRepository;
        protected IProductDesignationRepository ProductDesignationRepository;
        protected IProductTypeRepository ProductTypeRepository;
        protected IProductTypeDesignationRepository ProductTypeDesignationRepository;
        protected IProjectTypeRepository ProjectTypeRepository;
        protected IStandartMarginalIncomeRepository StandartMarginalIncomeRepository;
        protected IStandartProductionTermRepository StandartProductionTermRepository;
        protected IStructureCostRepository StructureCostRepository;
        protected IGlobalPropertiesRepository GlobalPropertiesRepository;
        protected IAddressRepository AddressRepository;
        protected ICountryRepository CountryRepository;
        protected IDistrictRepository DistrictRepository;
        protected ILocalityRepository LocalityRepository;
        protected ILocalityTypeRepository LocalityTypeRepository;
        protected IRegionRepository RegionRepository;
        protected ISumRepository SumRepository;
        protected ICurrencyExchangeRateRepository CurrencyExchangeRateRepository;
        protected INoteRepository NoteRepository;
        protected IOfferUnitRepository OfferUnitRepository;
        protected IPaymentConditionSetRepository PaymentConditionSetRepository;
        protected IProductBlockRepository ProductBlockRepository;
        protected IProductDependentRepository ProductDependentRepository;
        protected IBankDetailsRepository BankDetailsRepository;
        protected ICompanyRepository CompanyRepository;
        protected ICompanyFormRepository CompanyFormRepository;
        protected IDocumentsRegistrationDetailsRepository DocumentsRegistrationDetailsRepository;
        protected IEmployeesPositionRepository EmployeesPositionRepository;
        protected IFacilityTypeRepository FacilityTypeRepository;
        protected IActivityFieldRepository ActivityFieldRepository;
        protected IContractRepository ContractRepository;
        protected IMeasureRepository MeasureRepository;
        protected IParameterRepository ParameterRepository;
        protected IParameterGroupRepository ParameterGroupRepository;
        protected IProductRelationRepository ProductRelationRepository;
        protected IPersonRepository PersonRepository;
        protected IParameterRelationRepository ParameterRelationRepository;
        protected ISalesUnitRepository SalesUnitRepository;
        protected IDocumentRepository DocumentRepository;
        protected ISumOnDateRepository SumOnDateRepository;
        protected IProductRepository ProductRepository;
        protected IOfferRepository OfferRepository;
        protected IEmployeeRepository EmployeeRepository;
        protected IOrderRepository OrderRepository;
        protected IPaymentConditionRepository PaymentConditionRepository;
        protected IPaymentDocumentRepository PaymentDocumentRepository;
        protected IFacilityRepository FacilityRepository;
        protected IProjectRepository ProjectRepository;
        protected IUserRoleRepository UserRoleRepository;
        protected ISpecificationRepository SpecificationRepository;
        protected ITenderRepository TenderRepository;
        protected ITenderTypeRepository TenderTypeRepository;
        protected IUserRepository UserRepository;
        #endregion
    }
}
