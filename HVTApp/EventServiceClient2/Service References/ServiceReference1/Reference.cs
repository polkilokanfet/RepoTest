//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EventServiceClient2.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEventService", CallbackContract=typeof(EventServiceClient2.ServiceReference1.IEventServiceCallback))]
    public interface IEventService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/Connect", ReplyAction="http://tempuri.org/IEventService/ConnectResponse")]
        bool Connect(System.Guid appSassionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEventService/Connect", ReplyAction="http://tempuri.org/IEventService/ConnectResponse")]
        System.Threading.Tasks.Task<bool> ConnectAsync(System.Guid appSassionId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventService/Disconnect")]
        void Disconnect(System.Guid appSassionId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventService/Disconnect")]
        System.Threading.Tasks.Task DisconnectAsync(System.Guid appSassionId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventService/SaveIncomingRequestPublishEvent")]
        void SaveIncomingRequestPublishEvent(System.Guid appSassionId, System.Guid requestId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventService/SaveIncomingRequestPublishEvent")]
        System.Threading.Tasks.Task SaveIncomingRequestPublishEventAsync(System.Guid appSassionId, System.Guid requestId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IEventService/OnSaveIncomingRequestPublishEvent")]
        void OnSaveIncomingRequestPublishEvent(System.Guid requestId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEventServiceChannel : EventServiceClient2.ServiceReference1.IEventService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventServiceClient : System.ServiceModel.DuplexClientBase<EventServiceClient2.ServiceReference1.IEventService>, EventServiceClient2.ServiceReference1.IEventService {
        
        public EventServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public EventServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public EventServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public EventServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Connect(System.Guid appSassionId) {
            return base.Channel.Connect(appSassionId);
        }
        
        public System.Threading.Tasks.Task<bool> ConnectAsync(System.Guid appSassionId) {
            return base.Channel.ConnectAsync(appSassionId);
        }
        
        public void Disconnect(System.Guid appSassionId) {
            base.Channel.Disconnect(appSassionId);
        }
        
        public System.Threading.Tasks.Task DisconnectAsync(System.Guid appSassionId) {
            return base.Channel.DisconnectAsync(appSassionId);
        }
        
        public void SaveIncomingRequestPublishEvent(System.Guid appSassionId, System.Guid requestId) {
            base.Channel.SaveIncomingRequestPublishEvent(appSassionId, requestId);
        }
        
        public System.Threading.Tasks.Task SaveIncomingRequestPublishEventAsync(System.Guid appSassionId, System.Guid requestId) {
            return base.Channel.SaveIncomingRequestPublishEventAsync(appSassionId, requestId);
        }
    }
}
